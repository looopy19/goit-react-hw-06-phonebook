{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/Section/Section.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","addContact","createAction","types","name","number","payload","id","uuidv4","deleteContact","addFilter","actions","items","createReducer","state","filter","contact","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","contacts","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","getItems","getFilter","filteredContacts","lowerCaseFilter","toLowerCase","person","includes","getFiltredContacts","Form","dispatch","useDispatch","useSelector","useState","setName","setNumber","nameId","useRef","className","s","container","form","onSubmit","e","preventDefault","contactName","some","alert","validateContact","htmlFor","current","form__label","type","form__firstInput","value","onChange","event","currentTarget","placeholder","required","phone","maxLength","minLength","pattern","submit__box","form__button","disabled","Section","title","children","container__title","Contacts","list","list__ul","map","search__contact","onClick","trash","Filter","Search__box","search__label","search__input","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ee87e4ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search__box\":\"Filter_Search__box__Fm1DC\",\"search__label\":\"Filter_search__label__1YJ8r\",\"search__input\":\"Filter_search__input__YPBgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__QKgym\",\"container__title\":\"Section_container__title__1ro4q\"};","const ADD_CONTACT = 'contacts/Add_contact';\r\nconst DELETE_CONTACT = 'contacts/Delete_contact';\r\nconst ADD_FILTER = 'contacts/Add_filter';\r\nconst CLEAR_FILTER = 'contacts/Clear_filter';\r\n\r\nexport default { ADD_CONTACT, DELETE_CONTACT, ADD_FILTER, CLEAR_FILTER };","import types from './contacts-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction(types.ADD_CONTACT, (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(types.DELETE_CONTACT);\r\nconst addFilter = createAction(types.ADD_FILTER);\r\n\r\nexport default { addContact, deleteContact, addFilter };\r\n// export const addContact = (id, name, phone) => ({\r\n//   type: types.ADD_CONTACT,\r\n//   payload: {\r\n//     id,\r\n//     name,\r\n//     phone,\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = (id) => ({\r\n//   type: types.DELETE_CONTACT,\r\n//   payload: {\r\n//     id,\r\n//   },\r\n// });\r\n\r\n// export const addFilter = (text) => ({\r\n//   type: types.ADD_FILTER,\r\n//   payload: {\r\n//     text,\r\n//   },\r\n// });","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport actions from './contacts-action';\r\n\r\nconst { addContact, deleteContact, addFilter } = actions;\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [addFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// function itemsReducer(state = [], { type, payload }) {\r\n//   switch (type) {\r\n//     case actionTypes.ADD_CONTACT:\r\n//       return [payload, ...state];\r\n\r\n//     case actionTypes.DELETE_CONTACT:\r\n//       return state.filter((contact) => contact.id !== payload.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\n// function filterReducer(state = '', { type, payload }) {\r\n//   switch (type) {\r\n//     case actionTypes.ADD_FILTER:\r\n//       return payload.text;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  // исключаю ненужные свойства из сохранения локалсторейджа\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  // лайфхак для удаления ошибки персиста\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const filteredContacts = state => {\r\n  const contacts = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const getFiltredContacts = contacts => {\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n    return contacts.filter(person =>\r\n      person.name.toLowerCase().includes(lowerCaseFilter),\r\n    );\r\n  };\r\n  return getFiltredContacts(contacts);\r\n};","import { useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-action';\r\nimport { getItems } from '../../redux/contacts/contacts-selectors';\r\nimport s from './Form.module.css';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Form() {\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getItems);\r\n\r\n  const onSubmit = (name, number) => dispatch(actions.addContact(name, number));\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n \r\n  const nameId = useRef(uuidv4());\r\n\r\n  const handleInputChange = event => {\r\n    const { value } = event.currentTarget;\r\n    setName(value);\r\n  };\r\n\r\n   const handlePhoneInput = phone => setNumber(phone);\r\n\r\n   const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n   const validateContact = (contactName, contacts) => {\r\n    if (contacts.some(({ name }) => name === contactName)) {\r\n      alert(`${contactName} is already in contacts.`);\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  // для получения данных из формы в App.js во время сабмита\r\n  // использую метод с поднятием состояния в родитель\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const isContactValid = validateContact(name, contacts);\r\n\r\n    if (isContactValid) {\r\n      onSubmit(name, number);\r\n      reset();\r\n    }\r\n  };\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <label htmlFor={nameId.current}>\r\n            <p className={s.form__label}>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={s.form__firstInput}\r\n              value={name}\r\n              onChange={handleInputChange}\r\n              id={nameId.current}\r\n              placeholder=\"Enter name\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <p className={s.form__label}>Number</p>\r\n            <PhoneInput\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={handlePhoneInput}\r\n              maxLength=\"9\"\r\n              minLength=\"7\"\r\n              pattern=\"[0-9]{3}-{0,1}[0-9]{2}-{0,1}[0-9]{2}\"\r\n              required\r\n              placeholder=\"123-45-67\"\r\n            />\r\n          </label>\r\n          <div className={s.submit__box}>\r\n            <button\r\n              className={s.form__button}\r\n              type=\"submit\"\r\n              disabled={name === '' || number === ''}\r\n            >\r\n              Add contact\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      );\r\n    }\r\n  \r\n\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={s.container}>\r\n    <h2 className={s.container__title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import s from './Contacts.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-action';\r\nimport { filteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { FaRegAddressBook } from 'react-icons/fa';\r\nimport { VscTrash } from 'react-icons/vsc'\r\n\r\n\r\n\r\n\r\nconst Contacts = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(filteredContacts);\r\n\r\n  return (\r\n    <div className={s.list}>\r\n      <ul className={s.list__ul}>\r\n        {contacts.map(person => (\r\n          <li key={person.id} className={s.search__contact}>\r\n          \r\n            <FaRegAddressBook onClick={() => dispatch(actions.deleteContact(person.id))} />\r\n        \r\n            {person.name} : {person.number}\r\n            <div className={s.trash}>\r\n            \r\n              <VscTrash onClick={() => dispatch(actions.deleteContact(person.id))} />\r\n            \r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;","import { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-action';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\n\r\nconst Filter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n\r\n  const onChange = e => dispatch(actions.addFilter(e.currentTarget.value));\r\n\r\n  return (\r\n    <label htmlFor=\"search\" className={s.Search__box}>\r\n      <p className={s.search__label}>Find contacts by name:</p>\r\n      <input\r\n        className={s.search__input}\r\n        type=\"search\"\r\n        name=\"search\"\r\n        id=\"search\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;","\r\nimport Form from './components/Form';\r\nimport Section from './components/Section';\r\nimport Contacts from './components/Contacts';\r\nimport Filter from './components/Filter';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Section title='Phonebook'>\r\n        <Form/>\r\n      </Section>\r\n      \r\n      <Section title='Contacts'>\r\n        <Filter />\r\n        <Contacts/>\r\n        </Section>\r\n      </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={ store.persistor}>\n        <App />\n      </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__vWF7T\",\"form\":\"Form_form__16IXB\",\"form__button\":\"Form_form__button__2--XC\",\"form__label\":\"Form_form__label__hkC8T\",\"form__firstInput\":\"Form_form__firstInput__3NNgf\",\"submit__box\":\"Form_submit__box__1UsrD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search__contact\":\"Contacts_search__contact__2HLM1\",\"search__label\":\"Contacts_search__label__3MHVM\",\"list\":\"Contacts_list__2TvYM\",\"trash\":\"Contacts_trash__3TsPw\"};"],"sourceRoot":""}